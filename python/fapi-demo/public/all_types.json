[
    {
      "type": "no_such_attribute",
      "message_template_python": "Object has no attribute '{attribute}'",
      "example_message_python": "Object has no attribute ''",
      "example_context": {
        "attribute": ""
      }
    },
    {
      "type": "json_invalid",
      "message_template_python": "Invalid JSON: {error}",
      "example_message_python": "Invalid JSON: ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "json_type",
      "message_template_python": "JSON input should be string, bytes or bytearray",
      "example_message_python": "JSON input should be string, bytes or bytearray",
      "example_context": null
    },
    {
      "type": "recursion_loop",
      "message_template_python": "Recursion error - cyclic reference detected",
      "example_message_python": "Recursion error - cyclic reference detected",
      "example_context": null
    },
    {
      "type": "missing",
      "message_template_python": "Field required",
      "example_message_python": "Field required",
      "example_context": null
    },
    {
      "type": "frozen_field",
      "message_template_python": "Field is frozen",
      "example_message_python": "Field is frozen",
      "example_context": null
    },
    {
      "type": "frozen_instance",
      "message_template_python": "Instance is frozen",
      "example_message_python": "Instance is frozen",
      "example_context": null
    },
    {
      "type": "extra_forbidden",
      "message_template_python": "Extra inputs are not permitted",
      "example_message_python": "Extra inputs are not permitted",
      "example_context": null
    },
    {
      "type": "invalid_key",
      "message_template_python": "Keys should be strings",
      "example_message_python": "Keys should be strings",
      "example_context": null
    },
    {
      "type": "get_attribute_error",
      "message_template_python": "Error extracting attribute: {error}",
      "example_message_python": "Error extracting attribute: ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "model_type",
      "message_template_python": "Input should be a valid dictionary or instance of {class_name}",
      "example_message_python": "Input should be a valid dictionary or instance of ",
      "message_template_json": "Input should be an object",
      "example_message_json": "Input should be an object",
      "example_context": {
        "class_name": ""
      }
    },
    {
      "type": "model_attributes_type",
      "message_template_python": "Input should be a valid dictionary or object to extract fields from",
      "example_message_python": "Input should be a valid dictionary or object to extract fields from",
      "message_template_json": "Input should be an object",
      "example_message_json": "Input should be an object",
      "example_context": null
    },
    {
      "type": "dataclass_type",
      "message_template_python": "Input should be a dictionary or an instance of {class_name}",
      "example_message_python": "Input should be a dictionary or an instance of ",
      "message_template_json": "Input should be an object",
      "example_message_json": "Input should be an object",
      "example_context": {
        "class_name": ""
      }
    },
    {
      "type": "dataclass_exact_type",
      "message_template_python": "Input should be an instance of {class_name}",
      "example_message_python": "Input should be an instance of ",
      "example_context": {
        "class_name": ""
      }
    },
    {
      "type": "none_required",
      "message_template_python": "Input should be None",
      "example_message_python": "Input should be None",
      "message_template_json": "Input should be null",
      "example_message_json": "Input should be null",
      "example_context": null
    },
    {
      "type": "greater_than",
      "message_template_python": "Input should be greater than {gt}",
      "example_message_python": "Input should be greater than 0",
      "example_context": {
        "gt": 0
      }
    },
    {
      "type": "greater_than_equal",
      "message_template_python": "Input should be greater than or equal to {ge}",
      "example_message_python": "Input should be greater than or equal to 0",
      "example_context": {
        "ge": 0
      }
    },
    {
      "type": "less_than",
      "message_template_python": "Input should be less than {lt}",
      "example_message_python": "Input should be less than 0",
      "example_context": {
        "lt": 0
      }
    },
    {
      "type": "less_than_equal",
      "message_template_python": "Input should be less than or equal to {le}",
      "example_message_python": "Input should be less than or equal to 0",
      "example_context": {
        "le": 0
      }
    },
    {
      "type": "multiple_of",
      "message_template_python": "Input should be a multiple of {multiple_of}",
      "example_message_python": "Input should be a multiple of 0",
      "example_context": {
        "multiple_of": 0
      }
    },
    {
      "type": "finite_number",
      "message_template_python": "Input should be a finite number",
      "example_message_python": "Input should be a finite number",
      "example_context": null
    },
    {
      "type": "too_short",
      "message_template_python": "{field_type} should have at least {min_length} item{expected_plural} after validation, not {actual_length}",
      "example_message_python": " should have at least 0 items after validation, not 0",
      "example_context": {
        "field_type": "",
        "min_length": 0,
        "actual_length": 0
      }
    },
    {
      "type": "too_long",
      "message_template_python": "{field_type} should have at most {max_length} item{expected_plural} after validation, not {actual_length}",
      "example_message_python": " should have at most 0 items after validation, not 0",
      "example_context": {
        "field_type": "",
        "max_length": 0,
        "actual_length": 0
      }
    },
    {
      "type": "iterable_type",
      "message_template_python": "Input should be iterable",
      "example_message_python": "Input should be iterable",
      "message_template_json": "Input should be a valid array",
      "example_message_json": "Input should be a valid array",
      "example_context": null
    },
    {
      "type": "iteration_error",
      "message_template_python": "Error iterating over object, error: {error}",
      "example_message_python": "Error iterating over object, error: ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "string_type",
      "message_template_python": "Input should be a valid string",
      "example_message_python": "Input should be a valid string",
      "example_context": null
    },
    {
      "type": "string_sub_type",
      "message_template_python": "Input should be a string, not an instance of a subclass of str",
      "example_message_python": "Input should be a string, not an instance of a subclass of str",
      "example_context": null
    },
    {
      "type": "string_unicode",
      "message_template_python": "Input should be a valid string, unable to parse raw data as a unicode string",
      "example_message_python": "Input should be a valid string, unable to parse raw data as a unicode string",
      "example_context": null
    },
    {
      "type": "string_too_short",
      "message_template_python": "String should have at least {min_length} characters",
      "example_message_python": "String should have at least 0 characters",
      "example_context": {
        "min_length": 0
      }
    },
    {
      "type": "string_too_long",
      "message_template_python": "String should have at most {max_length} characters",
      "example_message_python": "String should have at most 0 characters",
      "example_context": {
        "max_length": 0
      }
    },
    {
      "type": "string_pattern_mismatch",
      "message_template_python": "String should match pattern '{pattern}'",
      "example_message_python": "String should match pattern ''",
      "example_context": {
        "pattern": ""
      }
    },
    {
      "type": "enum",
      "message_template_python": "Input should be {expected}",
      "example_message_python": "Input should be ",
      "example_context": {
        "expected": ""
      }
    },
    {
      "type": "dict_type",
      "message_template_python": "Input should be a valid dictionary",
      "example_message_python": "Input should be a valid dictionary",
      "message_template_json": "Input should be an object",
      "example_message_json": "Input should be an object",
      "example_context": null
    },
    {
      "type": "mapping_type",
      "message_template_python": "Input should be a valid mapping, error: {error}",
      "example_message_python": "Input should be a valid mapping, error: ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "list_type",
      "message_template_python": "Input should be a valid list",
      "example_message_python": "Input should be a valid list",
      "message_template_json": "Input should be a valid array",
      "example_message_json": "Input should be a valid array",
      "example_context": null
    },
    {
      "type": "tuple_type",
      "message_template_python": "Input should be a valid tuple",
      "example_message_python": "Input should be a valid tuple",
      "message_template_json": "Input should be a valid array",
      "example_message_json": "Input should be a valid array",
      "example_context": null
    },
    {
      "type": "set_type",
      "message_template_python": "Input should be a valid set",
      "example_message_python": "Input should be a valid set",
      "message_template_json": "Input should be a valid array",
      "example_message_json": "Input should be a valid array",
      "example_context": null
    },
    {
      "type": "bool_type",
      "message_template_python": "Input should be a valid boolean",
      "example_message_python": "Input should be a valid boolean",
      "example_context": null
    },
    {
      "type": "bool_parsing",
      "message_template_python": "Input should be a valid boolean, unable to interpret input",
      "example_message_python": "Input should be a valid boolean, unable to interpret input",
      "example_context": null
    },
    {
      "type": "int_type",
      "message_template_python": "Input should be a valid integer",
      "example_message_python": "Input should be a valid integer",
      "example_context": null
    },
    {
      "type": "int_parsing",
      "message_template_python": "Input should be a valid integer, unable to parse string as an integer",
      "example_message_python": "Input should be a valid integer, unable to parse string as an integer",
      "example_context": null
    },
    {
      "type": "int_parsing_size",
      "message_template_python": "Unable to parse input string as an integer, exceeded maximum size",
      "example_message_python": "Unable to parse input string as an integer, exceeded maximum size",
      "example_context": null
    },
    {
      "type": "int_from_float",
      "message_template_python": "Input should be a valid integer, got a number with a fractional part",
      "example_message_python": "Input should be a valid integer, got a number with a fractional part",
      "example_context": null
    },
    {
      "type": "float_type",
      "message_template_python": "Input should be a valid number",
      "example_message_python": "Input should be a valid number",
      "example_context": null
    },
    {
      "type": "float_parsing",
      "message_template_python": "Input should be a valid number, unable to parse string as a number",
      "example_message_python": "Input should be a valid number, unable to parse string as a number",
      "example_context": null
    },
    {
      "type": "bytes_type",
      "message_template_python": "Input should be a valid bytes",
      "example_message_python": "Input should be a valid bytes",
      "example_context": null
    },
    {
      "type": "bytes_too_short",
      "message_template_python": "Data should have at least {min_length} bytes",
      "example_message_python": "Data should have at least 0 bytes",
      "example_context": {
        "min_length": 0
      }
    },
    {
      "type": "bytes_too_long",
      "message_template_python": "Data should have at most {max_length} bytes",
      "example_message_python": "Data should have at most 0 bytes",
      "example_context": {
        "max_length": 0
      }
    },
    {
      "type": "value_error",
      "message_template_python": "Value error, {error}",
      "example_message_python": "Value error, None",
      "example_context": {
        "error": null
      }
    },
    {
      "type": "assertion_error",
      "message_template_python": "Assertion failed, {error}",
      "example_message_python": "Assertion failed, None",
      "example_context": {
        "error": null
      }
    },
    {
      "type": "literal_error",
      "message_template_python": "Input should be {expected}",
      "example_message_python": "Input should be ",
      "example_context": {
        "expected": ""
      }
    },
    {
      "type": "date_type",
      "message_template_python": "Input should be a valid date",
      "example_message_python": "Input should be a valid date",
      "example_context": null
    },
    {
      "type": "date_parsing",
      "message_template_python": "Input should be a valid date in the format YYYY-MM-DD, {error}",
      "example_message_python": "Input should be a valid date in the format YYYY-MM-DD, ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "date_from_datetime_parsing",
      "message_template_python": "Input should be a valid date or datetime, {error}",
      "example_message_python": "Input should be a valid date or datetime, ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "date_from_datetime_inexact",
      "message_template_python": "Datetimes provided to dates should have zero time - e.g. be exact dates",
      "example_message_python": "Datetimes provided to dates should have zero time - e.g. be exact dates",
      "example_context": null
    },
    {
      "type": "date_past",
      "message_template_python": "Date should be in the past",
      "example_message_python": "Date should be in the past",
      "example_context": null
    },
    {
      "type": "date_future",
      "message_template_python": "Date should be in the future",
      "example_message_python": "Date should be in the future",
      "example_context": null
    },
    {
      "type": "time_type",
      "message_template_python": "Input should be a valid time",
      "example_message_python": "Input should be a valid time",
      "example_context": null
    },
    {
      "type": "time_parsing",
      "message_template_python": "Input should be in a valid time format, {error}",
      "example_message_python": "Input should be in a valid time format, ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "datetime_type",
      "message_template_python": "Input should be a valid datetime",
      "example_message_python": "Input should be a valid datetime",
      "example_context": null
    },
    {
      "type": "datetime_parsing",
      "message_template_python": "Input should be a valid datetime, {error}",
      "example_message_python": "Input should be a valid datetime, ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "datetime_object_invalid",
      "message_template_python": "Invalid datetime object, got {error}",
      "example_message_python": "Invalid datetime object, got ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "datetime_past",
      "message_template_python": "Input should be in the past",
      "example_message_python": "Input should be in the past",
      "example_context": null
    },
    {
      "type": "datetime_future",
      "message_template_python": "Input should be in the future",
      "example_message_python": "Input should be in the future",
      "example_context": null
    },
    {
      "type": "timezone_naive",
      "message_template_python": "Input should not have timezone info",
      "example_message_python": "Input should not have timezone info",
      "example_context": null
    },
    {
      "type": "timezone_aware",
      "message_template_python": "Input should have timezone info",
      "example_message_python": "Input should have timezone info",
      "example_context": null
    },
    {
      "type": "timezone_offset",
      "message_template_python": "Timezone offset of {tz_expected} required, got {tz_actual}",
      "example_message_python": "Timezone offset of 0 required, got 0",
      "example_context": {
        "tz_expected": 0,
        "tz_actual": 0
      }
    },
    {
      "type": "time_delta_type",
      "message_template_python": "Input should be a valid timedelta",
      "example_message_python": "Input should be a valid timedelta",
      "message_template_json": "Input should be a valid duration",
      "example_message_json": "Input should be a valid duration",
      "example_context": null
    },
    {
      "type": "time_delta_parsing",
      "message_template_python": "Input should be a valid timedelta, {error}",
      "example_message_python": "Input should be a valid timedelta, ",
      "message_template_json": "Input should be a valid duration, {error}",
      "example_message_json": "Input should be a valid duration, ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "frozen_set_type",
      "message_template_python": "Input should be a valid frozenset",
      "example_message_python": "Input should be a valid frozenset",
      "message_template_json": "Input should be a valid array",
      "example_message_json": "Input should be a valid array",
      "example_context": null
    },
    {
      "type": "is_instance_of",
      "message_template_python": "Input should be an instance of {class}",
      "example_message_python": "Input should be an instance of ",
      "example_context": {
        "class": ""
      }
    },
    {
      "type": "is_subclass_of",
      "message_template_python": "Input should be a subclass of {class}",
      "example_message_python": "Input should be a subclass of ",
      "example_context": {
        "class": ""
      }
    },
    {
      "type": "callable_type",
      "message_template_python": "Input should be callable",
      "example_message_python": "Input should be callable",
      "example_context": null
    },
    {
      "type": "union_tag_invalid",
      "message_template_python": "Input tag '{tag}' found using {discriminator} does not match any of the expected tags: {expected_tags}",
      "example_message_python": "Input tag '' found using  does not match any of the expected tags: ",
      "example_context": {
        "discriminator": "",
        "tag": "",
        "expected_tags": ""
      }
    },
    {
      "type": "union_tag_not_found",
      "message_template_python": "Unable to extract tag using discriminator {discriminator}",
      "example_message_python": "Unable to extract tag using discriminator ",
      "example_context": {
        "discriminator": ""
      }
    },
    {
      "type": "arguments_type",
      "message_template_python": "Arguments must be a tuple, list or a dictionary",
      "example_message_python": "Arguments must be a tuple, list or a dictionary",
      "message_template_json": "Arguments must be an array or an object",
      "example_message_json": "Arguments must be an array or an object",
      "example_context": null
    },
    {
      "type": "missing_argument",
      "message_template_python": "Missing required argument",
      "example_message_python": "Missing required argument",
      "example_context": null
    },
    {
      "type": "unexpected_keyword_argument",
      "message_template_python": "Unexpected keyword argument",
      "example_message_python": "Unexpected keyword argument",
      "example_context": null
    },
    {
      "type": "missing_keyword_only_argument",
      "message_template_python": "Missing required keyword only argument",
      "example_message_python": "Missing required keyword only argument",
      "example_context": null
    },
    {
      "type": "unexpected_positional_argument",
      "message_template_python": "Unexpected positional argument",
      "example_message_python": "Unexpected positional argument",
      "example_context": null
    },
    {
      "type": "missing_positional_only_argument",
      "message_template_python": "Missing required positional only argument",
      "example_message_python": "Missing required positional only argument",
      "example_context": null
    },
    {
      "type": "multiple_argument_values",
      "message_template_python": "Got multiple values for argument",
      "example_message_python": "Got multiple values for argument",
      "example_context": null
    },
    {
      "type": "url_type",
      "message_template_python": "URL input should be a string or URL",
      "example_message_python": "URL input should be a string or URL",
      "example_context": null
    },
    {
      "type": "url_parsing",
      "message_template_python": "Input should be a valid URL, {error}",
      "example_message_python": "Input should be a valid URL, ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "url_syntax_violation",
      "message_template_python": "Input violated strict URL syntax rules, {error}",
      "example_message_python": "Input violated strict URL syntax rules, ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "url_too_long",
      "message_template_python": "URL should have at most {max_length} characters",
      "example_message_python": "URL should have at most 0 characters",
      "example_context": {
        "max_length": 0
      }
    },
    {
      "type": "url_scheme",
      "message_template_python": "URL scheme should be {expected_schemes}",
      "example_message_python": "URL scheme should be ",
      "example_context": {
        "expected_schemes": ""
      }
    },
    {
      "type": "uuid_type",
      "message_template_python": "UUID input should be a string, bytes or UUID object",
      "example_message_python": "UUID input should be a string, bytes or UUID object",
      "example_context": null
    },
    {
      "type": "uuid_parsing",
      "message_template_python": "Input should be a valid UUID, {error}",
      "example_message_python": "Input should be a valid UUID, ",
      "example_context": {
        "error": ""
      }
    },
    {
      "type": "uuid_version",
      "message_template_python": "UUID version {expected_version} expected",
      "example_message_python": "UUID version 0 expected",
      "example_context": {
        "expected_version": 0
      }
    }
  ]